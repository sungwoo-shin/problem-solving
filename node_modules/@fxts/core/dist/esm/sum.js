import { isAsyncIterable, isIterable } from "./_internal/utils.js";
import add from "./add.js";
import reduce from "./reduce.js";
// TODO The signature and implementation type are different.
function sum(iterable) {
    if (Array.isArray(iterable)) {
        return iterable.reduce(add, 0);
    }
    else if (isIterable(iterable)) {
        return reduce((a, b) => add(a, b), 0, iterable);
    }
    else if (isAsyncIterable(iterable)) {
        return reduce(add, Promise.resolve(0), iterable);
    }
    throw new TypeError("'iterable' must be type of Iterable or AsyncIterable");
}
export default sum;
//# sourceMappingURL=sum.js.map