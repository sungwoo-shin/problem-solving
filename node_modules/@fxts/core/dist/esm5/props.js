import { __values } from "tslib";
function props(keys, obj) {
    var e_1, _a;
    if (obj === null)
        return new Array(keys.length).fill(undefined);
    if (obj === undefined)
        return function (obj) { return props(keys, obj); };
    var result = [];
    try {
        for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {
            var key = keys_1_1.value;
            result.push(obj[key]);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return result;
}
export default props;
//# sourceMappingURL=props.js.map