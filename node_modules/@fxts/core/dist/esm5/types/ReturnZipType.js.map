{"version":3,"file":"ReturnZipType.js","sourceRoot":"","sources":["../../../src/types/ReturnZipType.ts"],"names":[],"mappings":"","sourcesContent":["import type Append from \"./Append\";\nimport type Cast from \"./Cast\";\nimport type Drop from \"./Drop\";\nimport type IterableInfer from \"./IterableInfer\";\nimport type Tail from \"./Tail\";\nimport type { UniversalIterable } from \"./Utils\";\n\ntype _ReturnZipValueType<\n  T extends unknown[],\n  TEMP extends unknown[] = [],\n> = T extends [unknown, ...unknown[]]\n  ? _ReturnZipValueType<\n      Tail<T>,\n      Append<TEMP, IterableInfer<Cast<T[0], UniversalIterable<unknown>>>>\n    >\n  : TEMP;\n\ntype _ReturnZipType<\n  T extends unknown[],\n  R,\n  W = IterableIterator<R>,\n> = T extends [a: infer A, ...args: unknown[]]\n  ? A extends Iterable<unknown>\n    ? _ReturnZipType<Drop<1, T>, R, W>\n    : _ReturnZipType<Drop<1, T>, R, AsyncIterableIterator<R>>\n  : W;\n\ntype ReturnZipType<T extends UniversalIterable[]> = _ReturnZipType<\n  T,\n  _ReturnZipValueType<T>\n>;\n\nexport default ReturnZipType;\n"]}