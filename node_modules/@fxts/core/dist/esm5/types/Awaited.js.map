{"version":3,"file":"Awaited.js","sourceRoot":"","sources":["../../../src/types/Awaited.ts"],"names":[],"mappings":"","sourcesContent":["type Awaited<T> = T extends null | undefined\n  ? T // special case for `null | undefined` when not in `--strictNullChecks` mode\n  : T extends object & { then(onfulfilled: infer F): any } // `await` only unwraps object types with a callable `then`. Non-object types are not unwrapped\n  ? F extends (value: infer V, ...args: any) => any // if the argument to `then` is callable, extracts the first argument\n    ? Awaited<V> // recursively unwrap the value\n    : never // the argument to `then` was not callable\n  : T; // non-object or non-thenable\n\nexport default Awaited;\n"]}