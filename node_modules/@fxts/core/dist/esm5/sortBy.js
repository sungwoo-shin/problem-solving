import { isAsyncIterable, isIterable } from "./_internal/utils.js";
import isArray from "./isArray.js";
import sort from "./sort.js";
function sortBy(f, iterable) {
    if (iterable === undefined) {
        return function (iterable) {
            return sortBy(f, iterable);
        };
    }
    var _sortBy = function (a, b) {
        var aa = f(a);
        var bb = f(b);
        return aa < bb ? -1 : aa > bb ? 1 : 0;
    };
    if (isArray(iterable)) {
        return iterable.sort(_sortBy);
    }
    if (isIterable(iterable)) {
        return sort(_sortBy, iterable);
    }
    if (isAsyncIterable(iterable)) {
        return sort(_sortBy, iterable);
    }
    throw new TypeError("'iterable' must be type of Iterable or AsyncIterable");
}
export default sortBy;
//# sourceMappingURL=sortBy.js.map