{"version":3,"file":"isEmpty.js","sourceRoot":"","sources":["../../src/isEmpty.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,WAAW,CAAC;AAChC,OAAO,KAAK,MAAM,SAAS,CAAC;AAE5B;;;;;;;;;;;;;;;;;;;GAmBG;AACH,IAAM,OAAO,GAAG,UAAI,KAAQ;IAC1B,IAAI,KAAK,CAAC,KAAK,CAAC;QAAE,OAAO,IAAI,CAAC,CAAC,iCAAiC;IAEhE,IACE,OAAO,KAAK,KAAK,QAAQ;QACxB,KAAgB,CAAC,aAAa,CAAC,KAAK,MAAM;QAC3C,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC;QAE9C,OAAO,IAAI,CAAC,CAAC,+DAA+D;IAE9E,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,IAAI,CAAC,CAAC,yBAAyB;IAEhF,IAAI,KAAK,KAAK,EAAE;QAAE,OAAO,IAAI,CAAC;IAE9B,IAAI,KAAK,YAAY,GAAG,IAAI,KAAK,YAAY,GAAG;QAAE,OAAO,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,6CAA6C;IAExH,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAEF,eAAe,OAAO,CAAC","sourcesContent":["import isArray from \"./isArray\";\nimport isNil from \"./isNil\";\n\n/**\n * Returns true if the given value is empty value, false otherwise.\n *\n * @example\n * ```ts\n * isEmpty({}) // true\n * isEmpty([]) // true\n * isEmpty(null) // true\n * isEmpty(undefined) // true\n * isEmpty(\"\") // true\n * isEmpty(new Map()) // true\n * isEmpty(new Set()) // true\n *\n * isEmpty(0) // false\n * isEmpty(false) // false\n * isEmpty(function(){}) // false\n * isEmpty(Symbol(\"\")) // false\n * isEmpty(new Date()) // false\n * ```\n */\nconst isEmpty = <T>(value: T): boolean => {\n  if (isNil(value)) return true; // if value is null or undefined.\n\n  if (\n    typeof value === \"object\" &&\n    (value as object)[\"constructor\"] === Object &&\n    Object.getOwnPropertyNames(value).length === 0\n  )\n    return true; // if value is a literal object and have no property or method.\n\n  if (isArray(value) && value.length === 0) return true; // if value have no item.\n\n  if (value === \"\") return true;\n\n  if (value instanceof Map || value instanceof Set) return value.size === 0; // if value is a Map or Set and have no item.\n\n  return false;\n};\n\nexport default isEmpty;\n"]}